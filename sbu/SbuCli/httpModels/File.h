/**
* Smart Backup Utility
* HTTP Server for Smart Backup Utility
*
* OpenAPI spec version: 1.0.0
* Contact: Shai@Roitman.info
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * File.h
 *
 * 
 */

#ifndef File_H_
#define File_H_


#include "ModelBase.h"

#include <string>

namespace io {
namespace swagger {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  File
    : public ModelBase
{
public:
    File();
    virtual ~File();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// File members

    /// <summary>
    /// 
    /// </summary>
    int64_t getId() const;
    void setId(int64_t value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    std::string getStatus() const;
    void setStatus(std::string value);
    bool statusIsSet() const;
    void unsetStatus();
    /// <summary>
    /// 
    /// </summary>
    std::string getType() const;
    void setType(std::string value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// 
    /// </summary>
    std::string getPath() const;
    void setPath(std::string value);
    bool pathIsSet() const;
    void unsetPath();
    /// <summary>
    /// 
    /// </summary>
    int64_t getSize() const;
    void setSize(int64_t value);
    bool sizeIsSet() const;
    void unsetSize();
    /// <summary>
    /// 
    /// </summary>
    std::string getCreated() const;
    void setCreated(std::string value);
    bool createdIsSet() const;
    void unsetCreated();
    /// <summary>
    /// 
    /// </summary>
    std::string getModified() const;
    void setModified(std::string value);
    bool modifiedIsSet() const;
    void unsetModified();
    /// <summary>
    /// 
    /// </summary>
    std::string getAccessed() const;
    void setAccessed(std::string value);
    bool accessedIsSet() const;
    void unsetAccessed();
    /// <summary>
    /// 
    /// </summary>
    std::string getDigestType() const;
    void setDigestType(std::string value);
    bool digestTypeIsSet() const;
    void unsetDigestType();
    /// <summary>
    /// 
    /// </summary>
    std::string getDigestValue() const;
    void setDigestValue(std::string value);
    bool digestValueIsSet() const;
    void unsetDigestValue();
    /// <summary>
    /// 
    /// </summary>
    std::string getFileHandle() const;
    void setFileHandle(std::string value);
    bool fileHandleIsSet() const;
    void unsetFileHandle();

protected:
    int64_t m_Id;
    bool m_IdIsSet;
    std::string m_Status;
    bool m_StatusIsSet;
    std::string m_Type;
    bool m_TypeIsSet;
    std::string m_Path;
    bool m_PathIsSet;
    int64_t m_Size;
    bool m_SizeIsSet;
    std::string m_Created;
    bool m_CreatedIsSet;
    std::string m_Modified;
    bool m_ModifiedIsSet;
    std::string m_Accessed;
    bool m_AccessedIsSet;
    std::string m_DigestType;
    bool m_DigestTypeIsSet;
    std::string m_DigestValue;
    bool m_DigestValueIsSet;
    std::string m_FileHandle;
    bool m_FileHandleIsSet;
};

}
}
}
}

#endif /* File_H_ */
